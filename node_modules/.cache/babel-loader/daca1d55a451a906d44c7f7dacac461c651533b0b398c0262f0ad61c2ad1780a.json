{"ast":null,"code":"const BASE_URL = \"https://dummyjson.com\";\nasync function fetchWithErrorHandling(url = \"\", options = {}) {\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n}\nexport const getProducts = async () => {\n  return fetchWithErrorHandling(`${BASE_URL}/products`);\n};\nexport const getProductById = async id => {\n  return fetchWithErrorHandling(`${BASE_URL}/products/${id}`);\n};\n\n// Note: Below functions are placeholders since the dummy API does not support actual cart operations.\n\nexport const addToCartAPI = async productId => {\n  // Placeholder: Simulate adding to cart\n  console.log(`Adding product ${productId} to cart.`);\n  // In a real application, you might post this action to your backend or manage it in global state\n  return {\n    success: true,\n    productId: productId\n  };\n};\nexport const updateCartItemAPI = async (productId, quantity) => {\n  // Placeholder: Simulate updating cart item\n  console.log(`Updating product ${productId} to quantity ${quantity}.`);\n  // Similar to addToCart, manage this in your state or backend\n  return {\n    success: true,\n    productId: productId,\n    quantity: quantity\n  };\n};\nexport const removeFromCartAPI = async productId => {\n  // Placeholder: Simulate removing from cart\n  console.log(`Removing product ${productId} from cart.`);\n  // Adjust according to your application's state management or backend\n  return {\n    success: true,\n    productId: productId\n  };\n};","map":{"version":3,"names":["BASE_URL","fetchWithErrorHandling","url","options","response","fetch","ok","Error","json","getProducts","getProductById","id","addToCartAPI","productId","console","log","success","updateCartItemAPI","quantity","removeFromCartAPI"],"sources":["/Users/haimingchen/Desktop/InnoCaption/e-commerce-mini-app/src/api/ServerAPI.js"],"sourcesContent":["const BASE_URL = \"https://dummyjson.com\";\n\nasync function fetchWithErrorHandling(url = \"\", options = {}) {\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n}\n\nexport const getProducts = async () => {\n  return fetchWithErrorHandling(`${BASE_URL}/products`);\n};\n\nexport const getProductById = async (id) => {\n  return fetchWithErrorHandling(`${BASE_URL}/products/${id}`);\n};\n\n// Note: Below functions are placeholders since the dummy API does not support actual cart operations.\n\nexport const addToCartAPI = async (productId) => {\n  // Placeholder: Simulate adding to cart\n  console.log(`Adding product ${productId} to cart.`);\n  // In a real application, you might post this action to your backend or manage it in global state\n  return { success: true, productId: productId };\n};\n\nexport const updateCartItemAPI = async (productId, quantity) => {\n  // Placeholder: Simulate updating cart item\n  console.log(`Updating product ${productId} to quantity ${quantity}.`);\n  // Similar to addToCart, manage this in your state or backend\n  return { success: true, productId: productId, quantity: quantity };\n};\n\nexport const removeFromCartAPI = async (productId) => {\n  // Placeholder: Simulate removing from cart\n  console.log(`Removing product ${productId} from cart.`);\n  // Adjust according to your application's state management or backend\n  return { success: true, productId: productId };\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,eAAeC,sBAAsBA,CAACC,GAAG,GAAG,EAAE,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC5D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAEC,OAAO,CAAC;EAC1C,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAOR,sBAAsB,CAAE,GAAED,QAAS,WAAU,CAAC;AACvD,CAAC;AAED,OAAO,MAAMU,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,OAAOV,sBAAsB,CAAE,GAAED,QAAS,aAAYW,EAAG,EAAC,CAAC;AAC7D,CAAC;;AAED;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C;EACAC,OAAO,CAACC,GAAG,CAAE,kBAAiBF,SAAU,WAAU,CAAC;EACnD;EACA,OAAO;IAAEG,OAAO,EAAE,IAAI;IAAEH,SAAS,EAAEA;EAAU,CAAC;AAChD,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAG,MAAAA,CAAOJ,SAAS,EAAEK,QAAQ,KAAK;EAC9D;EACAJ,OAAO,CAACC,GAAG,CAAE,oBAAmBF,SAAU,gBAAeK,QAAS,GAAE,CAAC;EACrE;EACA,OAAO;IAAEF,OAAO,EAAE,IAAI;IAAEH,SAAS,EAAEA,SAAS;IAAEK,QAAQ,EAAEA;EAAS,CAAC;AACpE,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAON,SAAS,IAAK;EACpD;EACAC,OAAO,CAACC,GAAG,CAAE,oBAAmBF,SAAU,aAAY,CAAC;EACvD;EACA,OAAO;IAAEG,OAAO,EAAE,IAAI;IAAEH,SAAS,EAAEA;EAAU,CAAC;AAChD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}